1014
Description

给定一个长度为N的int型数组a[0,1,2,...N-1], 请计算最大子数组和.

Input

第一行输入M表示包含M组测试数据，每组先输入N (N<=50000), 接着输入N个int型整数.

Output

输出最大子数组和.

Sample Input

2
5 -1 -5 -2 -1 -3
5 2 -1 3 -2 4

Sample Output

-1
6

#include <iostream>
#include<vector>
#include<algorithm>
using namespace std;
vector<int>ans;
int MaxSumOfSub3(int l, int r,int* nums) 
{
    if (l == r)
    {
        return nums[l];
    }
    int mid = (l + r) / 2;
    int maxa = MaxSumOfSub3(l, mid,nums);
    int maxb = MaxSumOfSub3(mid + 1, r,nums);
    int maxc, lmax = nums[mid], rmax = nums[mid+1], sum = 0;
    for (int i = mid; i >= l; i--) {
        sum += nums[i];
        lmax = max(lmax, sum);
    }
    sum = 0;
    for (int i = mid + 1; i <= r; i++)
    {
        sum += nums[i];
        rmax = max(rmax, sum);
    }
    maxc = lmax + rmax;

    return max(maxc, max(maxa, maxb));
}

int main()
{
    int num = 0;
    cin >> num;
    int length;
    for (int i = 0; i < num; i++)
    {
        cin >> length;
        int* arr = new int[length];
        for (int i = 0; i < length; i++)
        {
            cin >> arr[i];
        }
        ans.push_back(MaxSumOfSub3(0, length - 1, arr));
    }
    for (int i = 0; i < num; i++)
    {
        cout << ans[i] << endl;
    }
    return 0;
}
